	任务并行：任务操作不同
	数据并行：任务操作相同，数据不同
	数据划分：
		块划分：一个线程一个块，块大
		周期划分：一个线程多个块，块小
	计算机架构：
		分类（弗林分类）：
			SISD: 任何时间点，一个指令，一个数据流
			SIMD：多核，一指令，不同数据流
			MISD：少见
			MIMD：多核、多指令、多数据流
			降低延迟、提高带宽、提高吞吐量
		分类（内存组织）：
			分布式内存的多节点系统
			共享内存的多处理器系统
		GPU是一种众核架构：
			NV称之为SIMT：包括了多线程、MIMD、SIMD、指令级并行
	异构架构：
		主机代码、设备代码
		NV的GPU计算平台：
			Tegra：移动和嵌入式设备
			GeForce：图形用户
			Quadro：专业绘图设计
			Tesla：大规模并行计算；Fermi是其一种，Kepler是最新的
		GPU容量特征：cuda核心数量、内存大小
		GPU性能评估：峰值计算性能、内存带宽
	1.3 cuda输出hello world
		Nvcc gpu加速卡
		典型流程：分内存-》内存拷贝-》计算-》写回-》资源释放
	1.4 cuda编程难度
		三个关键：线程层次、内存层次、同步
		写好代码的关键是对底层架构了解，虽然cuda也在越来越智能，但抽象等级越高，可操控性就越差，性能优化就更有限
		cuda开发环境：IDE、gdb、性能、内存分析、gpu设备管理
	1.6习题
		块划分是一个大块给一个线程，每个线程只跑一个大块
		周期划分是把一坨连续的数据给多个线程，每个线程分一个小块；
		很容易想象，在一个维度做块划分，再在另一个维度做周期划分
		nvcc支持哪些后缀的文件？
		单个线程访问
